# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import AutoDataCollection_pb2 as AutoDataCollection__pb2


class AutoDataCollectionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.txt2xml = channel.unary_unary(
        '/AutoDataCollection/txt2xml',
        request_serializer=AutoDataCollection__pb2.auth.SerializeToString,
        response_deserializer=AutoDataCollection__pb2.resultXML.FromString,
        )


class AutoDataCollectionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def txt2xml(self, request, context):
    """客户端发起请求，服务端返回 xml 字符串
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AutoDataCollectionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'txt2xml': grpc.unary_unary_rpc_method_handler(
          servicer.txt2xml,
          request_deserializer=AutoDataCollection__pb2.auth.FromString,
          response_serializer=AutoDataCollection__pb2.resultXML.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AutoDataCollection', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
